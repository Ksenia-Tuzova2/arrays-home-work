{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Desktop/arrays/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // let [tasks, setTasks] = useState([\n  //     {id: v1(), title: \"HTML&CSS\", isDone: true},\n  //     {id: v1(), title: \"JS\", isDone: true},\n  //     {id: v1(), title: \"ReactJS\", isDone: false},\n  //     {id: v1(), title: \"Rest API\", isDone: false},\n  //     {id: v1(), title: \"GraphQL\", isDone: false},\n  // ]);\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'active'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"HTML&CSS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL2\",\n      isDone: false\n    }]\n  });\n\n  function addTask(listId, title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    }; // let newTasks = [task, ...tasks];\n\n    setTasks({ ...tasks,\n      [listId]: [...tas]\n    });\n  }\n\n  function changeStatus(taskId, isDone) {// let task = tasks.find(t => t.id === taskId);\n    // if (task) {\n    //     task.isDone = isDone;\n    // }\n    // setTasks([...tasks]);\n  }\n\n  function removeTask(listId, id) {\n    // tasksObj[toDoListId] = filtredTasks\n    // setTasks({ ...tasksObj }\n    //             let tasksforfilter=tasks[listId]\n    //         let filteredTasks = tasksforfilter.filter(t => t.id != id);\n    //  tasks[listId]=filteredTasks\n    //         setTasks({...tasks});\n    setTasks({ ...tasks,\n      [listId]: tasks[listId].filter(el => el.id !== id)\n    });\n  }\n\n  function changeFilter(value, listId) {\n    let findedList = todolists.find(el => //этот кусок ищет лист, который нам приходит в массиве данных\n    el.id === listId); //нашел, а значит равно правде\n\n    if (findedList) {\n      //присваиваем новое значение\n      findedList.filter = value; //оно перезаписывается за счет обмана\n\n      setTodolists([...todolists]);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      let tasksForTodolist = tasks[el.id];\n\n      if (el.filter === \"active\") {\n        tasksForTodolist = tasks[el.id].filter(t => t.isDone === false);\n      }\n\n      if (el.filter === \"completed\") {\n        tasksForTodolist = tasks[el.id].filter(t => t.isDone === true);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Todolist, {\n        title: el.title,\n        listId: el.id,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: el.filter\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"K3qpMtRhJtCPxC6u9yXsXCszDN4=\");\n\n_c = App;\nexport default App; //мне надо починить фильтр, почему он не работает?\n//надо менять данные внутри объекта массива, которых ну очень много\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","todolistID1","todolistID2","todolists","setTodolists","id","title","filter","tasks","setTasks","isDone","addTask","listId","task","tas","changeStatus","taskId","removeTask","el","changeFilter","value","findedList","find","map","tasksForTodolist","t"],"sources":["/Users/kseniatuzova/Desktop/arrays/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type todolistsType={\r\n    id: string,\r\n     title: string, \r\n     filter: FilterValuesType\r\n}\r\n\r\nfunction App() {\r\n\r\n    // let [tasks, setTasks] = useState([\r\n    //     {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    //     {id: v1(), title: \"JS\", isDone: true},\r\n    //     {id: v1(), title: \"ReactJS\", isDone: false},\r\n    //     {id: v1(), title: \"Rest API\", isDone: false},\r\n    //     {id: v1(), title: \"GraphQL\", isDone: false},\r\n    // ]);\r\n   \r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'active'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]:[\r\n            {id: v1(), title: \"HTML&CSS2\", isDone: true},\r\n            {id: v1(), title: \"JS2\", isDone: true},\r\n            {id: v1(), title: \"ReactJS2\", isDone: false},\r\n            {id: v1(), title: \"Rest API2\", isDone: false},\r\n            {id: v1(), title: \"GraphQL2\", isDone: false},\r\n        ]\r\n    });\r\n\r\n\r\n\r\n\r\n    function addTask(listId:string, title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        // let newTasks = [task, ...tasks];\r\n        setTasks({...tasks,[listId]:[...tas]});\r\n\r\n    }\r\n\r\n    function changeStatus(taskId: string, isDone: boolean) {\r\n        // let task = tasks.find(t => t.id === taskId);\r\n        // if (task) {\r\n        //     task.isDone = isDone;\r\n        // }\r\n\r\n        // setTasks([...tasks]);\r\n    }\r\n\r\n\r\n  \r\n    function removeTask(listId:string,id: string) {\r\n\r\n       \r\n        // tasksObj[toDoListId] = filtredTasks\r\n        // setTasks({ ...tasksObj }\r\n\r\n//             let tasksforfilter=tasks[listId]\r\n//         let filteredTasks = tasksforfilter.filter(t => t.id != id);\r\n//  tasks[listId]=filteredTasks\r\n//         setTasks({...tasks});\r\n\r\n\r\nsetTasks({...tasks,[listId]:tasks[listId].filter(el=>el.id !== id)})\r\n\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType, listId:string) {\r\n                        let findedList=todolists.find((el)=>\r\n                        //этот кусок ищет лист, который нам приходит в массиве данных\r\n                            el.id===listId\r\n                        )\r\n                        //нашел, а значит равно правде\r\n                        if(findedList){\r\n                            //присваиваем новое значение\r\n                            findedList.filter=value\r\n                            //оно перезаписывается за счет обмана\r\n                            setTodolists([...todolists])\r\n                        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            {\r\n                todolists.map((el:any)=>{ \r\n\r\n                    \r\n                    let tasksForTodolist=tasks[el.id]\r\n\r\n                    if (el.filter === \"active\") {\r\n                        tasksForTodolist=tasks[el.id].filter(t => t.isDone === false);\r\n                    }\r\n                    if (el.filter === \"completed\") {\r\n                        tasksForTodolist=tasks[el.id].filter(t => t.isDone === true);\r\n                    }\r\n\r\n\r\n                  \r\n  \r\n                \r\n                    return(\r\n                    <Todolist\r\n                    key={el.id}\r\n                    title={el.title}\r\n                    listId={el.id}\r\n                    tasks={tasksForTodolist}\r\n                    removeTask={removeTask}\r\n                    changeFilter={changeFilter}\r\n                    addTask={addTask}\r\n                    changeTaskStatus={changeStatus}\r\n                    filter={el.filter}\r\n          />\r\n                )\r\n                  \r\n                })\r\n            }\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n//мне надо починить фильтр, почему он не работает?\r\n//надо менять данные внутри объекта массива, которых ну очень много"],"mappings":"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"},"metadata":{},"sourceType":"module"}