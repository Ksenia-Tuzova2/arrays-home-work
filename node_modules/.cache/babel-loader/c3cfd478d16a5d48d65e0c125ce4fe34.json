{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Desktop/arrays/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [tasks, setTasks] = useState([{\n    id: v1(),\n    title: \"HTML&CSS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"JS\",\n    isDone: true\n  }, {\n    id: v1(),\n    title: \"ReactJS\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"Rest API\",\n    isDone: false\n  }, {\n    id: v1(),\n    title: \"GraphQL\",\n    isDone: false\n  }]);\n  let [filter, setFilter] = useState(\"all\");\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]); // let [tasks, setTasks] = useState({\n  //     [todolistID1]:[\n  //         {id: v1(), title: \"HTML&CSS\", isDone: true},\n  //         {id: v1(), title: \"JS\", isDone: true},\n  //         {id: v1(), title: \"ReactJS\", isDone: false},\n  //         {id: v1(), title: \"Rest API\", isDone: false},\n  //         {id: v1(), title: \"GraphQL\", isDone: false},\n  //     ],\n  //     [todolistID2]:[\n  //         {id: v1(), title: \"HTML&CSS2\", isDone: true},\n  //         {id: v1(), title: \"JS2\", isDone: true},\n  //         {id: v1(), title: \"ReactJS2\", isDone: false},\n  //         {id: v1(), title: \"Rest API2\", isDone: false},\n  //         {id: v1(), title: \"GraphQL2\", isDone: false},\n  //     ]\n  // });\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n\n  function changeStatus(taskId, isDone) {\n    let task = tasks.find(t => t.id === taskId);\n\n    if (task) {\n      task.isDone = isDone;\n    }\n\n    setTasks([...tasks]);\n  }\n\n  let tasksForTodolist = tasks;\n\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n\n  function changeFilter(value) {\n    setFilter(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: todolists.map(el => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(Todolist, {\n        title: el.ti,\n        tasks: tasksForTodolist,\n        removeTask: removeTask,\n        changeFilter: changeFilter,\n        addTask: addTask,\n        changeTaskStatus: changeStatus,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"VINgG38WOllT9f5t8JxMSL0i9FQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","tasks","setTasks","id","title","isDone","filter","setFilter","todolistID1","todolistID2","todolists","setTodolists","removeTask","filteredTasks","t","addTask","task","newTasks","changeStatus","taskId","find","tasksForTodolist","changeFilter","value","map","el","ti"],"sources":["/Users/kseniatuzova/Desktop/arrays/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type todolistsType={\r\n    id: string,\r\n     title: string, \r\n     filter: FilterValuesType\r\n}\r\n\r\nfunction App() {\r\n\r\n    let [tasks, setTasks] = useState([\r\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false},\r\n        {id: v1(), title: \"Rest API\", isDone: false},\r\n        {id: v1(), title: \"GraphQL\", isDone: false},\r\n    ]);\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    // let [tasks, setTasks] = useState({\r\n    //     [todolistID1]:[\r\n    //         {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    //         {id: v1(), title: \"JS\", isDone: true},\r\n    //         {id: v1(), title: \"ReactJS\", isDone: false},\r\n    //         {id: v1(), title: \"Rest API\", isDone: false},\r\n    //         {id: v1(), title: \"GraphQL\", isDone: false},\r\n    //     ],\r\n    //     [todolistID2]:[\r\n    //         {id: v1(), title: \"HTML&CSS2\", isDone: true},\r\n    //         {id: v1(), title: \"JS2\", isDone: true},\r\n    //         {id: v1(), title: \"ReactJS2\", isDone: false},\r\n    //         {id: v1(), title: \"Rest API2\", isDone: false},\r\n    //         {id: v1(), title: \"GraphQL2\", isDone: false},\r\n    //     ]\r\n    // });\r\n\r\n\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(taskId: string, isDone: boolean) {\r\n        let task = tasks.find(t => t.id === taskId);\r\n        if (task) {\r\n            task.isDone = isDone;\r\n        }\r\n\r\n        setTasks([...tasks]);\r\n    }\r\n\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            {\r\n                todolists.map((el:any)=>{ return\r\n                    <Todolist title={el.ti}\r\n                    tasks={tasksForTodolist}\r\n                    removeTask={removeTask}\r\n                    changeFilter={changeFilter}\r\n                    addTask={addTask}\r\n                    changeTaskStatus={changeStatus}\r\n                    filter={filter}\r\n          />\r\n                })\r\n            }\r\n          \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAAQC,EAAR,QAAiB,MAAjB;;;AASA,SAASC,GAAT,GAAe;EAAA;;EAEX,IAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAC7B;IAACM,EAAE,EAAEJ,EAAE,EAAP;IAAWK,KAAK,EAAE,UAAlB;IAA8BC,MAAM,EAAE;EAAtC,CAD6B,EAE7B;IAACF,EAAE,EAAEJ,EAAE,EAAP;IAAWK,KAAK,EAAE,IAAlB;IAAwBC,MAAM,EAAE;EAAhC,CAF6B,EAG7B;IAACF,EAAE,EAAEJ,EAAE,EAAP;IAAWK,KAAK,EAAE,SAAlB;IAA6BC,MAAM,EAAE;EAArC,CAH6B,EAI7B;IAACF,EAAE,EAAEJ,EAAE,EAAP;IAAWK,KAAK,EAAE,UAAlB;IAA8BC,MAAM,EAAE;EAAtC,CAJ6B,EAK7B;IAACF,EAAE,EAAEJ,EAAE,EAAP;IAAWK,KAAK,EAAE,SAAlB;IAA6BC,MAAM,EAAE;EAArC,CAL6B,CAAD,CAAhC;EAOA,IAAI,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAmB,KAAnB,CAAlC;EAEA,IAAIW,WAAW,GAACT,EAAE,EAAlB;EACA,IAAIU,WAAW,GAACV,EAAE,EAAlB;EAEA,IAAI,CAACW,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAuB,CAC3D;IAACM,EAAE,EAAEK,WAAL;IAAkBJ,KAAK,EAAE,eAAzB;IAA0CE,MAAM,EAAE;EAAlD,CAD2D,EAE3D;IAACH,EAAE,EAAEM,WAAL;IAAkBL,KAAK,EAAE,aAAzB;IAAwCE,MAAM,EAAE;EAAhD,CAF2D,CAAvB,CAAxC,CAdW,CAmBX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAIA,SAASM,UAAT,CAAoBT,EAApB,EAAgC;IAC5B,IAAIU,aAAa,GAAGZ,KAAK,CAACK,MAAN,CAAaQ,CAAC,IAAIA,CAAC,CAACX,EAAF,IAAQA,EAA1B,CAApB;IACAD,QAAQ,CAACW,aAAD,CAAR;EACH;;EAED,SAASE,OAAT,CAAiBX,KAAjB,EAAgC;IAC5B,IAAIY,IAAI,GAAG;MAACb,EAAE,EAAEJ,EAAE,EAAP;MAAWK,KAAK,EAAEA,KAAlB;MAAyBC,MAAM,EAAE;IAAjC,CAAX;IACA,IAAIY,QAAQ,GAAG,CAACD,IAAD,EAAO,GAAGf,KAAV,CAAf;IACAC,QAAQ,CAACe,QAAD,CAAR;EACH;;EAED,SAASC,YAAT,CAAsBC,MAAtB,EAAsCd,MAAtC,EAAuD;IACnD,IAAIW,IAAI,GAAGf,KAAK,CAACmB,IAAN,CAAWN,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASgB,MAAzB,CAAX;;IACA,IAAIH,IAAJ,EAAU;MACNA,IAAI,CAACX,MAAL,GAAcA,MAAd;IACH;;IAEDH,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;EACH;;EAGD,IAAIoB,gBAAgB,GAAGpB,KAAvB;;EAEA,IAAIK,MAAM,KAAK,QAAf,EAAyB;IACrBe,gBAAgB,GAAGpB,KAAK,CAACK,MAAN,CAAaQ,CAAC,IAAIA,CAAC,CAACT,MAAF,KAAa,KAA/B,CAAnB;EACH;;EACD,IAAIC,MAAM,KAAK,WAAf,EAA4B;IACxBe,gBAAgB,GAAGpB,KAAK,CAACK,MAAN,CAAaQ,CAAC,IAAIA,CAAC,CAACT,MAAF,KAAa,IAA/B,CAAnB;EACH;;EAED,SAASiB,YAAT,CAAsBC,KAAtB,EAA+C;IAC3ChB,SAAS,CAACgB,KAAD,CAAT;EACH;;EAGD,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,UAGQb,SAAS,CAACc,GAAV,CAAeC,EAAD,IAAU;MAAE;;MACtB;MAAA,QAAC,QAAD;QAAU,KAAK,EAAEA,EAAE,CAACC,EAApB;QACA,KAAK,EAAEL,gBADP;QAEA,UAAU,EAAET,UAFZ;QAGA,YAAY,EAAEU,YAHd;QAIA,OAAO,EAAEP,OAJT;QAKA,gBAAgB,EAAEG,YALlB;QAMA,MAAM,EAAEZ;MANR;QAAA;QAAA;QAAA;MAAA;IAQH,CATD;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GA3FQN,G;;KAAAA,G;AA6FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}