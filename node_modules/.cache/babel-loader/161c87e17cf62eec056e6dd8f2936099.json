{"ast":null,"code":"var _jsxFileName = \"/Users/kseniatuzova/Desktop/arrays/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Todolist } from './Todolist';\nimport { v1 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // let [tasks, setTasks] = useState([\n  //     {id: v1(), title: \"HTML&CSS\", isDone: true},\n  //     {id: v1(), title: \"JS\", isDone: true},\n  //     {id: v1(), title: \"ReactJS\", isDone: false},\n  //     {id: v1(), title: \"Rest API\", isDone: false},\n  //     {id: v1(), title: \"GraphQL\", isDone: false},\n  // ]);\n  let [filter, setFilter] = useState(\"all\");\n  let todolistID1 = v1();\n  let todolistID2 = v1();\n  let [todolists, setTodolists] = useState([{\n    id: todolistID1,\n    title: 'What to learn',\n    filter: 'all'\n  }, {\n    id: todolistID2,\n    title: 'What to buy',\n    filter: 'all'\n  }]);\n  let [tasks, setTasks] = useState({\n    [todolistID1]: [{\n      id: v1(),\n      title: \"HTML&CSS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL\",\n      isDone: false\n    }],\n    [todolistID2]: [{\n      id: v1(),\n      title: \"HTML&CSS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"JS2\",\n      isDone: true\n    }, {\n      id: v1(),\n      title: \"ReactJS2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"Rest API2\",\n      isDone: false\n    }, {\n      id: v1(),\n      title: \"GraphQL2\",\n      isDone: false\n    }]\n  });\n\n  function removeTask(id) {\n    let filteredTasks = tasks.filter(t => t.id != id);\n    setTasks(filteredTasks);\n  }\n\n  function addTask(title) {\n    let task = {\n      id: v1(),\n      title: title,\n      isDone: false\n    };\n    let newTasks = [task, ...tasks];\n    setTasks(newTasks);\n  }\n\n  function changeStatus(taskId, isDone) {\n    let task = tasks.find(t => t.id === taskId);\n\n    if (task) {\n      task.isDone = isDone;\n    }\n\n    setTasks([...tasks]);\n  }\n\n  let tasksForTodolist = tasks;\n\n  if (filter === \"active\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === false);\n  }\n\n  if (filter === \"completed\") {\n    tasksForTodolist = tasks.filter(t => t.isDone === true);\n  }\n\n  function changeFilter(value) {\n    setFilter(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Todolist, {\n      title: \"What to learn\",\n      tasks: tasksForTodolist,\n      removeTask: removeTask,\n      changeFilter: changeFilter,\n      addTask: addTask,\n      changeTaskStatus: changeStatus,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"uI2xoOxd4usDIFsefW200WrU1pM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Todolist","v1","App","filter","setFilter","todolistID1","todolistID2","todolists","setTodolists","id","title","tasks","setTasks","isDone","removeTask","filteredTasks","t","addTask","task","newTasks","changeStatus","taskId","find","tasksForTodolist","changeFilter","value"],"sources":["/Users/kseniatuzova/Desktop/arrays/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './App.css';\r\nimport {Todolist} from './Todolist';\r\nimport {v1} from 'uuid';\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type todolistsType=any\r\n\r\nfunction App() {\r\n\r\n    // let [tasks, setTasks] = useState([\r\n    //     {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n    //     {id: v1(), title: \"JS\", isDone: true},\r\n    //     {id: v1(), title: \"ReactJS\", isDone: false},\r\n    //     {id: v1(), title: \"Rest API\", isDone: false},\r\n    //     {id: v1(), title: \"GraphQL\", isDone: false},\r\n    // ]);\r\n    let [filter, setFilter] = useState<FilterValuesType>(\"all\");\r\n\r\n    let todolistID1=v1();\r\n    let todolistID2=v1();\r\n\r\n    let [todolists, setTodolists] = useState<Array<todolistsType>>([\r\n        {id: todolistID1, title: 'What to learn', filter: 'all'},\r\n        {id: todolistID2, title: 'What to buy', filter: 'all'},\r\n    ])\r\n\r\n    let [tasks, setTasks] = useState({\r\n        [todolistID1]:[\r\n            {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n            {id: v1(), title: \"JS\", isDone: true},\r\n            {id: v1(), title: \"ReactJS\", isDone: false},\r\n            {id: v1(), title: \"Rest API\", isDone: false},\r\n            {id: v1(), title: \"GraphQL\", isDone: false},\r\n        ],\r\n        [todolistID2]:[\r\n            {id: v1(), title: \"HTML&CSS2\", isDone: true},\r\n            {id: v1(), title: \"JS2\", isDone: true},\r\n            {id: v1(), title: \"ReactJS2\", isDone: false},\r\n            {id: v1(), title: \"Rest API2\", isDone: false},\r\n            {id: v1(), title: \"GraphQL2\", isDone: false},\r\n        ]\r\n    });\r\n\r\n\r\n\r\n    function removeTask(id: string) {\r\n        let filteredTasks = tasks.filter(t => t.id != id);\r\n        setTasks(filteredTasks);\r\n    }\r\n\r\n    function addTask(title: string) {\r\n        let task = {id: v1(), title: title, isDone: false};\r\n        let newTasks = [task, ...tasks];\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    function changeStatus(taskId: string, isDone: boolean) {\r\n        let task = tasks.find(t => t.id === taskId);\r\n        if (task) {\r\n            task.isDone = isDone;\r\n        }\r\n\r\n        setTasks([...tasks]);\r\n    }\r\n\r\n\r\n    let tasksForTodolist = tasks;\r\n\r\n    if (filter === \"active\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === false);\r\n    }\r\n    if (filter === \"completed\") {\r\n        tasksForTodolist = tasks.filter(t => t.isDone === true);\r\n    }\r\n\r\n    function changeFilter(value: FilterValuesType) {\r\n        setFilter(value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Todolist title=\"What to learn\"\r\n                      tasks={tasksForTodolist}\r\n                      removeTask={removeTask}\r\n                      changeFilter={changeFilter}\r\n                      addTask={addTask}\r\n                      changeTaskStatus={changeStatus}\r\n                      filter={filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}